* session with midi device in overtone
** start up and find info about overtone and midi devices
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(use 'overtone.core)
#+END_SRC

#+RESULTS:
: nil

Must be captialized?
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
overtone.version/OVERTONE-VERSION
#+END_SRC

#+RESULTS:
| :major | 0 | :minor | 9 | :patch | 1 | :snapshot | false |
** (midi-connected-devices)
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(midi-connected-devices)
#+END_SRC



#+RESULTS:
: '((:description "Axiom A.I.R. Mini32 MIDI"  :vendor "M-Audio"  :sinks 0  :sources 2147483647  :name "MIDI"  :overtone.studio.midi/full-device-key (:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0)  :info #object(com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI")  :overtone.studio.midi/dev-num 0  :device #object(com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc")  :version "Unknown version") (:description "Axiom A.I.R. Mini32 HyperControl"  :vendor "M-Audio"  :sinks 0  :sources 2147483647  :name "HyperControl"  :overtone.studio.midi/full-device-key (:midi-device "M-Audio" "HyperControl" "Axiom A.I.R. Mini32 HyperControl" 0)  :info #object(com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x3886ef0a "HyperControl")  :overtone.studio.midi/dev-num 0  :device #object(com.sun.media.sound.MidiInDevice 0x42fac5ea "com.sun.media.sound.MidiInDevice@42fac5ea")  :version "Unknown version"))

#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
({:description "Axiom A.I.R. Mini32 MIDI",
  :vendor "M-Audio",
  :sinks 0,
  :sources 2147483647,
  :name "MIDI",
  :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0],
  :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI"],
  :overtone.studio.midi/dev-num 0,
  :device #object[com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc"],
  :version "Unknown version"}

 {:description "Axiom A.I.R. Mini32 HyperControl",
  :vendor "M-Audio",
  :sinks 0,
  :sources 2147483647,
  :name "HyperControl",
  :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "HyperControl" "Axiom A.I.R. Mini32 HyperControl" 0],
  :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x3886ef0a "HyperControl"],
  :overtone.studio.midi/dev-num 0,
  :device #object[com.sun.media.sound.MidiInDevice 0x42fac5ea "com.sun.media.sound.MidiInDevice@42fac5ea"],
  :version "Unknown version"})
#+END_SRC
** (event-debug-on)
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(event-debug-on)
#+END_SRC
** note-on event with the event-debug-on function
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
event:  [:midi :note-on] ({:data2 117, :command :note-on, :channel 0, :msg #object[com.sun.media.sound.FastShortMessage 0x23ec8f33 "com.sun.media.sound.FastShortMessage@23ec8f33"], :note 60, :dev-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :status :note-on, :data1 60, :data2-f 0.9212598, :device {:description "Axiom A.I.R. Mini32 MIDI", :vendor "M-Audio", :sinks 0, :sources 2147483647, :name "MIDI", :transmitter #object[com.sun.media.sound.MidiInDevice$MidiInTransmitter 0x17af0adf "com.sun.media.sound.MidiInDevice$MidiInTransmitter@17af0adf"], :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI"], :overtone.studio.midi/dev-num 0, :device #object[com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc"], :version "Unknown version"}, :timestamp 18402497323, :velocity 117, :velocity-f 0.9212598}) 
event:  [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0] ({:data2 117, :command :note-on, :channel 0, :msg #object[com.sun.media.sound.FastShortMessage 0x23ec8f33 "com.sun.media.sound.FastShortMessage@23ec8f33"], 
:note 60, :dev-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :status :note-on, :data1 60, :data2-f 0.9212598, :device {:description "Axiom A.I.R. Mini32 MIDI", :vendor "M-Audio", :sinks 0, :sources 2147483647, :name "MIDI", :transmitter #object[com.sun.media.sound.MidiInDevice$MidiInTransmitter 0x17af0adf "com.sun.media.sound.MidiInDevice$MidiInTransmitter@17af0adf"], :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI"], :overtone.studio.midi/dev-num 0, :device #object[com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc"], :version "Unknown version"}, :timestamp 18402497323, :velocity 117, :velocity-f 0.9212598})
 
event:  (:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0 :note-on 60) ({:data2 117, :command :note-on, :channel 0, :msg #object[com.sun.media.sound.FastShortMessage 0x23ec8f33 "com.sun.media.sound.FastShortMessage@23ec8f33"], 
:note 60, :dev-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :status :note-on, :data1 60, :data2-f 0.9212598, :device {:description "Axiom A.I.R. Mini32 MIDI", :vendor "M-Audio", :sinks 0, :sources 2147483647, :name "MIDI", :transmitter #object[com.sun.media.sound.MidiInDevice$MidiInTransmitter 0x17af0adf "com.sun.media.sound.MidiInDevice$MidiInTransmitter@17af0adf"], :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI"], :overtone.studio.midi/dev-num 0, :device #object[com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc"], :version "Unknown version"}, :timestamp 18402497323, :velocity 117, :velocity-f 0.9212598})
 
event:  (:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0 :note-on) ({:data2 117, :command :note-on, :channel 0, :msg #object[com.sun.media.sound.FastShortMessage 0x23ec8f33 "com.sun.media.sound.FastShortMessage@23ec8f33"], 
:note 60, :dev-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :status :note-on, :data1 60, :data2-f 0.9212598, :device {:description "Axiom A.I.R. Mini32 MIDI", :vendor "M-Audio", :sinks 0, :sources 2147483647, :name "MIDI", :transmitter #object[com.sun.media.sound.MidiInDevice$MidiInTransmitter 0x17af0adf "com.sun.media.sound.MidiInDevice$MidiInTransmitter@17af0adf"], :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI"], :overtone.studio.midi/dev-num 0, :device #object[com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc"], :version "Unknown version"}, :timestamp 18402497323, :velocity 117, :velocity-f 0.9212598})
#+END_SRC
** note-off event

#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
event:  [:midi :note-off] ({:data2 0, :command :note-off, :channel 0, :msg #object[com.sun.media.sound.FastShortMessage 0x535e9cfb "com.sun.media.sound.FastShortMessage@535e9cfb"], :note 60, :dev-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :status :note-on, :data1 60, :data2-f 0.0, :device {:description "Axiom A.I.R. Mini32 MIDI", :vendor "M-Audio", :sinks 0, :sources 2147483647, :name "MIDI", :transmitter #object[com.sun.media.sound.MidiInDevice$MidiInTransmitter 0x17af0adf "com.sun.media.sound.MidiInDevice$MidiInTransmitter@17af0adf"], :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI"], :overtone.studio.midi/dev-num 0, :device #object[com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc"], :version "Unknown version"}, :timestamp 18410464271, :velocity 0, :velocity-f 0.0}) 
event:  [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0] ({:data2 0, :command :note-off, :channel 0, :msg #object[com.sun.media.sound.FastShortMessage 0x535e9cfb "com.sun.media.sound.FastShortMessage@535e9cfb"], :note 60, :dev-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :status :note-on, :data1 60, :data2-f 0.0, :device {:description "Axiom A.I.R. Mini32 MIDI", :vendor "M-Audio", :sinks 0, :sources 2147483647, :name "MIDI", :transmitter #object[com.sun.media.sound.MidiInDevice$MidiInTransmitter 0x17af0adf "com.sun.media.sound.MidiInDevice$MidiInTransmitter@17af0adf"], :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI"], :overtone.studio.midi/dev-num 0, :device #object[com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc"], :version "Unknown version"}, :timestamp 18410464271, :velocity 0, :velocity-f 0.0}) 
event:  (:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0 :note-off 60) ({:data2 0, :command :note-off, :channel 0, :msg #object[com.sun.media.sound.FastShortMessage 0x535e9cfb "com.sun.media.sound.FastShortMessage@535e9cfb"], :note 60, :dev-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :status :note-on, :data1 60, :data2-f 0.0, :device {:description "Axiom A.I.R. Mini32 MIDI", :vendor "M-Audio", :sinks 0, :sources 2147483647, :name "MIDI", :transmitter #object[com.sun.media.sound.MidiInDevice$MidiInTransmitter 0x17af0adf "com.sun.media.sound.MidiInDevice$MidiInTransmitter@17af0adf"], :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI"], :overtone.studio.midi/dev-num 0, :device #object[com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc"], :version "Unknown version"}, :timestamp 18410464271, :velocity 0, :velocity-f 0.0})
 
event:  (:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0 :note-off) ({:data2 0, :command :note-off, :channel 0, :msg #object[com.sun.media.sound.FastShortMessage 0x535e9cfb "com.sun.media.sound.FastShortMessage@535e9cfb"], :note 60, :dev-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :status :note-on, :data1 60, :data2-f 0.0, :device {:description "Axiom A.I.R. Mini32 MIDI", :vendor "M-Audio", :sinks 0, :sources 2147483647, :name "MIDI", :transmitter #object[com.sun.media.sound.MidiInDevice$MidiInTransmitter 0x17af0adf "com.sun.media.sound.MidiInDevice$MidiInTransmitter@17af0adf"], :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI"], :overtone.studio.midi/dev-num 0, :device #object[com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc"], :version "Unknown version"}, :timestamp 18410464271, :velocity 0, :velocity-f 0.0})
#+END_SRC
** debug off
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(event-debug-off)
#+END_SRC

#+RESULTS:
: false

** control-change starting point

*** knob 1
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
event:  [:midi :control-change] ({:data2 1, :command :control-change, :channel 0, :msg #object[com.sun.media.sound.FastShortMessage 0x18025326 "com.sun.media.sound.FastShortMessage@18025326"], :note 2, :dev-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :status :control-change, :data1 2, :data2-f 0.007874016, :device {:description "Axiom A.I.R. Mini32 MIDI", :vendor "M-Audio", :sinks 0, :sources 2147483647, :name "MIDI", :transmitter #object[com.sun.media.sound.MidiInDevice$MidiInTransmitter 0x17af0adf "com.sun.media.sound.MidiInDevice$MidiInTransmitter@17af0adf"], :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI"], :overtone.studio.midi/dev-num 0, :device #object[com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc"], :version "Unknown version"}, :timestamp 18651991003, :velocity 1, :velocity-f 0.007874016}) 
event:  [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0] ({:data2 1, :command :control-change, :channel 0, :msg #object[com.sun.media.sound.FastShortMessage 0x18025326 "com.sun.media.sound.FastShortMessage@18025326"], :note 2, :dev-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :status :control-change, :data1 2, :data2-f 0.007874016, :device {:description "Axiom A.I.R. Mini32 MIDI", :vendor "M-Audio", :sinks 0, :sources 2147483647, :name "MIDI", :transmitter #object[com.sun.media.sound.MidiInDevice$MidiInTransmitter 0x17af0adf "com.sun.media.sound.MidiInDevice$MidiInTransmitter@17af0adf"], :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI"], :overtone.studio.midi/dev-num 0, :device #object[com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc"], :version "Unknown version"}, :timestamp 18651991003, :velocity 1, :velocity-f 0.007874016})
 
event:  (:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0 :control-change 2) ({:data2 1, :command :control-change, :channel 0, :msg #object[com.sun.media.sound.FastShortMessage 0x18025326 "com.sun.media.sound.FastShortMessage@18025326"], :note 2, :dev-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :status :control-change, :data1 2, :data2-f 0.007874016, :device {:description "Axiom A.I.R. Mini32 MIDI", :vendor "M-Audio", :sinks 0, :sources 2147483647, :name "MIDI", :transmitter #object[com.sun.media.sound.MidiInDevice$MidiInTransmitter 0x17af0adf "com.sun.media.sound.MidiInDevice$MidiInTransmitter@17af0adf"], :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI"], :overtone.studio.midi/dev-num 0, :device #object[com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc"], :version "Unknown version"}, :timestamp 18651991003, :velocity 1, :velocity-f 0.007874016})
 
event:  (:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0 :control-change) ({:data2 1, :command :control-change, :channel 0, :msg #object[com.sun.media.sound.FastShortMessage 0x18025326 "com.sun.media.sound.FastShortMessage@18025326"], :note 2, :dev-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :status :control-change, :data1 2, :data2-f 0.007874016, :device {:description "Axiom A.I.R. Mini32 MIDI", :vendor "M-Audio", :sinks 0, :sources 2147483647, :name "MIDI", :transmitter #object[com.sun.media.sound.MidiInDevice$MidiInTransmitter 0x17af0adf "com.sun.media.sound.MidiInDevice$MidiInTransmitter@17af0adf"], :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI"], :overtone.studio.midi/dev-num 0, :device #object[com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc"], :version "Unknown version"}, :timestamp 18651991003, :velocity 1, :velocity-f 0.007874016})

#+END_SRC
** control-change ending point
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
event:  [:midi :control-change] ({:data2 127, :command :control-change, :channel 0, :msg #object[com.sun.media.sound.FastShortMessage 0x42926a68 "com.sun.media.sound.FastShortMessage@42926a68"], :note 2, :dev-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :status :control-change, :data1 2, :data2-f 1.0, :device {:description "Axiom A.I.R. Mini32 MIDI", :vendor "M-Audio", :sinks 0, :sources 2147483647, :name "MIDI", :transmitter #object[com.sun.media.sound.MidiInDevice$MidiInTransmitter 0x17af0adf "com.sun.media.sound.MidiInDevice$MidiInTransmitter@17af0adf"], :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI"], :overtone.studio.midi/dev-num 0, :device #object[com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc"], :version "Unknown version"}, :timestamp 18652583742, :velocity 127, :velocity-f 1.0}) 
event:  [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0] ({:data2 127, :command :control-change, :channel 0, :msg #object[com.sun.media.sound.FastShortMessage 0x42926a68 "com.sun.media.sound.FastShortMessage@42926a68"], :note 2, :dev-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :status :control-change, :data1 2, :data2-f 1.0, :device {:description "Axiom A.I.R. Mini32 MIDI", :vendor "M-Audio", :sinks 0, :sources 2147483647, :name "MIDI", :transmitter #object[com.sun.media.sound.MidiInDevice$MidiInTransmitter 0x17af0adf "com.sun.media.sound.MidiInDevice$MidiInTransmitter@17af0adf"], :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI"], :overtone.studio.midi/dev-num 0, :device #object[com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc"], :version "Unknown version"}, :timestamp 18652583742, :velocity 127, :velocity-f 1.0})
 
event:  (:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0 :control-change 2) ({:data2 127, :command :control-change, :channel 0, :msg #object[com.sun.media.sound.FastShortMessage 0x42926a68 "com.sun.media.sound.FastShortMessage@42926a68"], :note 2, :dev-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :status :control-change, :data1 2, :data2-f 1.0, :device {:description "Axiom A.I.R. Mini32 MIDI", :vendor "M-Audio", :sinks 0, :sources 2147483647, :name "MIDI", :transmitter #object[com.sun.media.sound.MidiInDevice$MidiInTransmitter 0x17af0adf "com.sun.media.sound.MidiInDevice$MidiInTransmitter@17af0adf"], :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI"], :overtone.studio.midi/dev-num 0, :device #object[com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc"], :version "Unknown version"}, :timestamp 18652583742, :velocity 127, :velocity-f 1.0})
 
event:  (:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0 :control-change) ({:data2 127, :command :control-change, :channel 0, :msg #object[com.sun.media.sound.FastShortMessage 0x42926a68 "com.sun.media.sound.FastShortMessage@42926a68"], :note 2, :dev-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :status :control-change, :data1 2, :data2-f 1.0, :device {:description "Axiom A.I.R. Mini32 MIDI", :vendor "M-Audio", :sinks 0, :sources 2147483647, :name "MIDI", :transmitter #object[com.sun.media.sound.MidiInDevice$MidiInTransmitter 0x17af0adf "com.sun.media.sound.MidiInDevice$MidiInTransmitter@17af0adf"], :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI"], :overtone.studio.midi/dev-num 0, :device #object[com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc"], :version "Unknown version"}, :timestamp 18652583742, :velocity 127, :velocity-f 1.0})

#+END_SRC

#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
event:  [:midi :control-change] ({:data2 28, :command :control-change, :channel 0, :msg #object[com.sun.media.sound.FastShortMessage 0x77f7f70a "com.sun.media.sound.FastShortMessage@77f7f70a"], :note 1, :dev-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :status :control-change, :data1 1, :data2-f 0.22047244, :device {:description "Axiom A.I.R. Mini32 MIDI", :vendor "M-Audio", :sinks 0, :sources 2147483647, :name "MIDI", :transmitter #object[com.sun.media.sound.MidiInDevice$MidiInTransmitter 0x17af0adf "com.sun.media.sound.MidiInDevice$MidiInTransmitter@17af0adf"], :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI"], :overtone.studio.midi/dev-num 0, :device #object[com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc"], :version "Unknown version"}, :timestamp 25614776293, :velocity 28, :velocity-f 0.22047244}) 
event:  [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0] ({:data2 28, :command :control-change, :channel 0, :msg #object[com.sun.media.sound.FastShortMessage 0x77f7f70a "com.sun.media.sound.FastShortMessage@77f7f70a"], :note 1, :dev-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :status :control-change, :data1 1, :data2-f 0.22047244, :device {:description "Axiom A.I.R. Mini32 MIDI", :vendor "M-Audio", :sinks 0, :sources 2147483647, :name "MIDI", :transmitter #object[com.sun.media.sound.MidiInDevice$MidiInTransmitter 0x17af0adf "com.sun.media.sound.MidiInDevice$MidiInTransmitter@17af0adf"], :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI"], :overtone.studio.midi/dev-num 0, :device #object[com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc"], :version "Unknown version"}, :timestamp 25614776293, :velocity 28, :velocity-f 0.22047244})
 
event:  (:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0 :control-change 1) ({:data2 28, :command :control-change, :channel 0, :msg #object[com.sun.media.sound.FastShortMessage 0x77f7f70a "com.sun.media.sound.FastShortMessage@77f7f70a"], :note 1, :dev-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :status :control-change, :data1 1, :data2-f 0.22047244, :device {:description "Axiom A.I.R. Mini32 MIDI", :vendor "M-Audio", :sinks 0, :sources 2147483647, :name "MIDI", :transmitter #object[com.sun.media.sound.MidiInDevice$MidiInTransmitter 0x17af0adf "com.sun.media.sound.MidiInDevice$MidiInTransmitter@17af0adf"], :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI"], :overtone.studio.midi/dev-num 0, :device #object[com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc"], :version "Unknown version"}, :timestamp 25614776293, :velocity 28, :velocity-f 0.22047244})
 
event:  (:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0 :control-change) ({:data2 28, :command :control-change, :channel 0, :msg #object[com.sun.media.sound.FastShortMessage 0x77f7f70a "com.sun.media.sound.FastShortMessage@77f7f70a"], :note 1, :dev-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :status :control-change, :data1 1, :data2-f 0.22047244, :device {:description "Axiom A.I.R. Mini32 MIDI", :vendor "M-Audio", :sinks 0, :sources 2147483647, :name "MIDI", :transmitter #object[com.sun.media.sound.MidiInDevice$MidiInTransmitter 0x17af0adf "com.sun.media.sound.MidiInDevice$MidiInTransmitter@17af0adf"], :overtone.studio.midi/full-device-key [:midi-device "M-Audio" "MIDI" "Axiom A.I.R. Mini32 MIDI" 0], :info #object[com.sun.media.sound.MidiInDeviceProvider$MidiInDeviceInfo 0x1142bdd "MIDI"], :overtone.studio.midi/dev-num 0, :device #object[com.sun.media.sound.MidiInDevice 0x117963cc "com.sun.media.sound.MidiInDevice@117963cc"], :version "Unknown version"}, :timestamp 25614776293, :velocity 28, :velocity-f 0.22047244})

#+END_SRC
*** knob2
** create a basic instrument for use with midi-poly-player
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(definst steel-drum [note 60 amp 0.8]
  (let [freq (midicps note)]
    (* amp
       (env-gen (perc 0.01 0.2) 1 1 0 1 :action FREE)
       (+ (sin-osc (/ freq 2))
          (rlpf (saw freq) (* 1.1 freq) 0.4)))))
#+END_SRC

#+RESULTS:
: #<instrument: steel-drum>
** make a player to use midi-poly-player and defined instrument
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(def player (midi-poly-player steel-drum))
#+END_SRC

#+RESULTS:
: #'user/player
** stop the defined player--doesn't do what you hope?
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(midi-player-stop)
#+END_SRC

#+RESULTS:
: :handler-removed
** create an event handler with on-event--needs a real instrument for demo
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(on-event [:midi :note-on]
          (fn [e]
            (let [note (:note e)
                  vel  (:velocity e)]
              (your-instr note vel)))
          ::keyboard-handler)
#+END_SRC
** remove event handler
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(remove-event-handler ::keyboard-handler)
#+END_SRC

#+RESULTS:
: :handler-removed
** create a very simple instrument 
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(definst boop [note 60 amp 0.3]
  (let [freq (midicps note)]
    (* amp (sin-osc freq))))

#+END_SRC

#+RESULTS:
: #<instrument: boop>
** demonstrate use of defined instrument with defaults
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(boop)
#+END_SRC

#+RESULTS:
: #<synth-node[loading]: user/boop 681>
** kill all instances of running instrument--contrast with killing with ID-specific number
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(kill boop)
#+END_SRC

#+RESULTS:
: nil
** create a player using midi-poly-player to play the simple instrument
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(def booper (midi-poly-player boop))
#+END_SRC

#+RESULTS:
: #'user/booper
** stop the player--doesn't do what you hope?
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(midi-player-stop)
#+END_SRC
** stop the player by redefining with 'nil'
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(def booper (midi-poly-player nil))p
#+END_SRC

#+RESULTS:
: #'user/booper
** stop all sounds
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(stop)
#+END_SRC

#+RESULTS:
: nil
** create an event handler using on-event for using with simple-sine instrument
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(on-event [:midi :note-on]
          (fn [e]
            (let [note (:note e)
                  vel  (:velocity e)]
              (boop note (* 0.1 vel))))
          ::boop-handler)
#+END_SRC

#+RESULTS:
: :added-async-handler
** stop player using remove-event-handler
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(remove-event-handler ::boop-handler)
#+END_SRC

#+RESULTS:
: :handler-removed
** create an event handler with on-event and use control-change??
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(definst anoise [vol 0.01]
  (* (pink-noise)
     vol))

#+END_SRC

#+RESULTS:
: #<instrument: anoise>

#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(anoise)
#+END_SRC

#+RESULTS:
: #<synth-node[loading]: user/anoise 700>

#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(kill anoise)
#+END_SRC

#+RESULTS:
: nil
** basically works, but gets loud fast (vel vs. val error)
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(on-event [:midi :control-change]
          (fn [e]
            (let [val (:data2 e)
                  vel  (:velocity e)]
              (anoise vel)))
          ::data-handler)
#+END_SRC

#+RESULTS:
: :added-async-handler

#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(remove-event-handler ::data-handler)
#+END_SRC

#+RESULTS:
: :handler-removed
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(on-event [:midi :control-change]
          (fn [e]
            (let [val (:data2 e)
                  vel  (:velocity e)]
              (ctl anoise val)))
          ::ctldata-handler)
#+END_SRC

#+RESULTS:
: :added-async-handler

#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(remove-event-handler ::ctldata-handler)
#+END_SRC
** println note-on and velocity message
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(on-event [:midi :note-on] (fn [{note :note velocity :velocity}]
                             (println "Note: " note ", Velocity: " velocity))
          ::note-printer)
#+END_SRC

#+RESULTS:
: :added-async-handler

#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(remove-event-handler ::note-printer)
#+END_SRC

#+RESULTS:
: :handler-removed
** correctly grab and print out the cc-chanel and velocity (use :note and :velocity)
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(on-event [:midi :control-change] (fn [{cc-channel :note velocity :velocity}]
                             (println "channel: " cc-channel ", Velocity: " velocity))
          ::cc-printer)
#+END_SRC

#+RESULTS:
: :added-async-handler

#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(remove-event-handler ::cc-printer)
#+END_SRC

#+RESULTS:
: :handler-removed
** correctly grab and use as vol the cc-chanel and velocity (use :note and :velocity)
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(on-event [:midi :control-change] (fn [{cc-channel :note velocity :velocity}]
                                    (ctl anoise :vol (scale-range velocity 1 127 0 1)))
          ::cc-player)
#+END_SRC

#+RESULTS:
: :added-async-handler

#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(remove-event-handler ::cc-player)
#+END_SRC

#+RESULTS:
: :handler-removed
** 
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(on-event [:midi :control-change] (fn [{cc-channel :note velocity :velocity}]
                                    (lpf (ctl anoise :vol (scale-range velocity 1 127 0 1))
                                         10)
          ::cc-filterplayer)
#+END_SRC

#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(demo 10
  (lpf (* 0.5 (saw [339 440]))
       (mouse-x 10 10000)))
#+END_SRC

#+RESULTS:
: #<synth-node[loading]: user/audition-synth 706>
** 

#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(definst an-fnoise [vol 0.1 ffreq 1000]
  (lpf (* (pink-noise)
          vol)
       ffreq))

#+END_SRC

#+RESULTS:
: #<instrument: an-fnoise>


#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(an-fnoise)
#+END_SRC

#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(kill an-fnoise)
#+END_SRC

#+RESULTS:
: nil

#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(ctl an-fnoise :ffreq 4000)
#+END_SRC
** remember, to use ctl, must have an active instance
#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(an-fnoise)
#+END_SRC

#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(on-event [:midi :control-change] (fn [{cc-channel :note velocity :velocity}]
                                     (ctl an-fnoise :ffreq (scale-range velocity 1 127 100 8000))
                                         10)
          ::cc-filterplayer)
#+END_SRC

#+RESULTS:
: :added-async-handler

#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(on-event [:midi :note-on]
          (fn [m]
            (let [note (:note m)]
              (prophet :freq (midi->hz note)
                       :decay 5
                       :rq 0.6
                       :cutoff-freq 1000)))
          ::prophet-midi)
#+END_SRC

#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(on-event [:midi :note-on]
          (fn [m]
            (let [note (:note m)]
              (prophet :freq (midi->hz note)
                       :decay 5
                       :rq 0.6
                       :cutoff-freq 1000
                       :amp (:velocity-f m))))
          ::prophet-midi)
#+END_SRC

#+BEGIN_SRC clojure :session *cider-repl post_tonal_overtone*
(on-event [:midi :control-change] (fn [{cc-channel :note velocity :velocity}]
                                    (ctl anoise :vol (scale-range velocity 1 127 0 1)))
          ::cc-player)
#+END_SRC
